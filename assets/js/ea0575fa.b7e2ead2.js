"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[143],{2962:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>r,metadata:()=>l,toc:()=>d});var t=n(4848),o=n(8453);const r={id:"paraflow",title:"Paraflow",sidebar_position:2},i="ParaFlow Documentation",l={id:"paraflow/paraflow",title:"Paraflow",description:"Introduction",source:"@site/paranet/paraflow/index.md",sourceDirName:"paraflow",slug:"/paraflow/",permalink:"/paraflow/",draft:!1,unlisted:!1,editUrl:"https://github.com/your-org/your-project/edit/main/paranet/paraflow/index.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{id:"paraflow",title:"Paraflow",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Cloud",permalink:"/getting_started/deployment/cloud"},next:{title:"Hello World",permalink:"/paraflow/hello-world"}},s={},d=[{value:"Introduction",id:"introduction",level:2},{value:"Paraflow",id:"paraflow",level:2},{value:"Paraflow agents can:",id:"paraflow-agents-can",level:3},{value:"Paranet",id:"paranet",level:2}];function c(e){const a={h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(a.header,{children:(0,t.jsx)(a.h1,{id:"paraflow-documentation",children:"ParaFlow Documentation"})}),"\n",(0,t.jsx)(a.h2,{id:"introduction",children:"Introduction"}),"\n",(0,t.jsx)(a.h2,{id:"paraflow",children:"Paraflow"}),"\n",(0,t.jsxs)(a.p,{children:[(0,t.jsx)(a.strong,{children:"Paraflow"})," is a simple language designed to build autonomous agents. Paraflow agents are goal-seeking: based on a set of goals, they plan and execute tasks that make progress towards achieving those goals. The behavior of Paraflow agents is deterministic, transparent, and inspectable."]}),"\n",(0,t.jsx)(a.h3,{id:"paraflow-agents-can",children:"Paraflow agents can:"}),"\n",(0,t.jsxs)(a.ul,{children:["\n",(0,t.jsx)(a.li,{children:"Respond to events"}),"\n",(0,t.jsx)(a.li,{children:"Make decisions"}),"\n",(0,t.jsx)(a.li,{children:"Plan & perform actions"}),"\n",(0,t.jsx)(a.li,{children:"Manage state"}),"\n"]}),"\n",(0,t.jsxs)(a.p,{children:["Paraflow is ",(0,t.jsx)(a.strong,{children:"not"})," a general-purpose language. Its primary purpose is to monitor, plan, and orchestrate activities. You may often do some simple data manipulation in Paraflow, but for more complex code, consider creating a separate service in a general-purpose language."]}),"\n",(0,t.jsx)(a.h2,{id:"paranet",children:"Paranet"}),"\n",(0,t.jsx)(a.p,{children:"Paraflow actors operate within a Paranet. They can implement skills (i.e., receive and fulfill requests) and they can delegate work (i.e., make requests that help achieve their goals) to other actors on the network."})]})}function p(e={}){const{wrapper:a}={...(0,o.R)(),...e.components};return a?(0,t.jsx)(a,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,a,n)=>{n.d(a,{R:()=>i,x:()=>l});var t=n(6540);const o={},r=t.createContext(o);function i(e){const a=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function l(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),t.createElement(r.Provider,{value:a},e.children)}}}]);