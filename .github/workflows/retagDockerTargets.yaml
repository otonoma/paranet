on:
    workflow_call:
      inputs:
        TARGET_TAG:
          required: true
          type: string
        TARGETS:
          required: true
          type: string
        TAGS:
          required: true
          type: string
        REGISTRY:
          default: 'ghcr.io/otonoma/'
          type: string
        REPO:
          default: ''
          type: string
  
  name: Retag docker images
  
  jobs:
    targets:
      runs-on: ubuntu-latest
      outputs:
        targets: ${{ steps.targets.outputs.targets }}
      steps:
      - name: JSON targets
        id: targets
        run: |
          echo "targets=$(echo '${{ inputs.TARGETS }}' | jq --compact-output -R 'split("\\s+";"")')" >> $GITHUB_OUTPUT
  
    retag_matrix:
      runs-on: ubuntu-latest
      needs: targets
      env:
        TAGS: ${{ inputs.TAGS }}
      strategy:
        matrix:
          target: ${{ fromJSON(needs.targets.outputs.targets) }}
        fail-fast: true
      steps:
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3
  
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
  
      - name: Format tags
        run: |
          formatted_tags=$(echo "$TAGS" | jq -sRr 'split("\\s+";"") | map(select(. != "")) | map("--tag ${{ inputs.REGISTRY }}${{ inputs.REPO }}${{ matrix.target }}:" + .) | join(" ")')
          echo "FORMATTED_TAGS=${formatted_tags}" >> $GITHUB_ENV
  
      - name: Retag target
        run: |
          docker buildx imagetools create ${{ env.FORMATTED_TAGS }} ${{ inputs.REGISTRY }}${{ inputs.REPO }}${{ matrix.target }}:${{ inputs.TARGET_TAG }}
  